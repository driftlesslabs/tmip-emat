name: Core Testing

on:
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

env:
  CACHE_NUMBER: 1  # increase to reset cache manually

jobs:
  foundation:

    strategy:
      matrix:
        python-version: [3.9]
    defaults:
      run:
        shell: bash -l {0}
    name: linux-64-py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: asim-test
            use-mamba: true
            python-version: ${{ matrix.python-version }}

      - name: Set cache date for year and month
        run: echo "DATE=$(date +'%Y%m')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/asim-test
          key: linux-64-conda-${{ hashFiles('conda-envs/EMAT-DEV.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n asim-test -f conda-envs/EMAT-DEV.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install emat
        # installing without dependencies is faster, we trust that all needed dependencies
        # are in the conda environment defined above.  Also, this avoids pip getting
        # confused and reinstalling tables (pytables).
        run: |
          python -m pip install . --no-deps

      - name: Conda checkup
        run: |
          mamba info -a
          mamba list

      - name: Setup DynamoDB Local
        uses: rrainn/dynamodb-action@v2.0.1
        with:
          dbPath: # undefined by default, if this is undefined inMemory will be used
          sharedDb: # undefined by default
          delayTransientStatuses: # undefined by default
          optimizeDbBeforeStartup: # undefined by default
          port: 8123
          cors: '*'

      - name: Test EMAT
        run: |
          python -m pytest .

